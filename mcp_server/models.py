# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T07:50:14+00:00

from __future__ import annotations

from datetime import date as date_aliased
from datetime import datetime
from typing import Dict, List, Optional
from uuid import UUID

from pydantic import BaseModel, ConfigDict, Field, RootModel


class AddressInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    postalCode: Optional[str] = None
    state: Optional[str] = None


class AddressUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    postalCode: Optional[str] = None
    state: Optional[str] = None


class AddressViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    postalCode: Optional[str] = None
    state: Optional[str] = None


class AppointmentAuditViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appointmentId: Optional[str] = None
    id: Optional[str] = None
    modificationType: Optional[str] = None
    modifiedBy: Optional[str] = None
    modifiedOn: Optional[str] = None
    notesAfter: Optional[str] = None
    notesBefore: Optional[str] = None
    statusAfter: Optional[str] = None
    statusBefore: Optional[str] = None


class AppointmentCustomerViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appointmentId: Optional[str] = None
    customerId: Optional[str] = None


class AppointmentReminderViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    emailFirstReminder: Optional[int] = None
    emailFirstReminderInterval: Optional[int] = None
    emailSecondReminder: Optional[int] = None
    emailSecondReminderInterval: Optional[int] = None
    smsFirstReminder: Optional[int] = None
    smsFirstReminderInterval: Optional[int] = None
    smsSecondReminder: Optional[int] = None
    smsSecondReminderInterval: Optional[int] = None


class AppointmentRemindersInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    emailFirstReminder: Optional[int] = None
    emailFirstReminderInterval: Optional[int] = None
    emailSecondReminder: Optional[int] = None
    emailSecondReminderInterval: Optional[int] = None
    smsFirstReminder: Optional[int] = None
    smsFirstReminderInterval: Optional[int] = None
    smsSecondReminder: Optional[int] = None
    smsSecondReminderInterval: Optional[int] = None


class AppointmentResourceViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appointmentId: Optional[str] = None
    resourceEmail: Optional[str] = None
    resourceGroupId: Optional[str] = None
    resourceId: Optional[str] = None
    resourceImageUrl: Optional[str] = None
    resourceName: Optional[str] = None


class AuthorizedCompanyViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None


class BusinessDefaultsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    autoUpdateCustomer: Optional[bool] = None
    businessNotification: Optional[bool] = None
    customerCity: Optional[bool] = None
    customerState: Optional[bool] = None
    emailInfo: Optional[bool] = None
    enableUtcTimezone: Optional[bool] = None


class BusinessDefaultsUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    autoUpdateCustomer: Optional[bool] = None
    businessNotification: Optional[bool] = None
    customerCity: Optional[bool] = None
    customerState: Optional[bool] = None
    emailInfo: Optional[bool] = None
    enableUtcTimezone: Optional[bool] = None


class BusinessDefaultsViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    autoUpdateCustomer: Optional[bool] = None
    businessNotification: Optional[bool] = None
    customerCity: Optional[bool] = None
    customerState: Optional[bool] = None
    emailInfo: Optional[bool] = None
    enableUtcTimezone: Optional[bool] = None
    object: Optional[str] = None


class BusinessHolidayViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessClosed: Optional[bool] = None
    holidayName: Optional[str] = None
    id: Optional[str] = None
    publicHolidayId: Optional[int] = None


class BusinessHourInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = Field(
        None,
        description='endTime is entered in military format. e.g. 1800 = 6pm end, 2400 = midnight end of day.\r\nFor 24 hours enter startTime = 0 and endTime = 2400',
    )
    is24Hours: Optional[bool] = Field(
        None,
        description='If true then available for 24 hours. startTime must be zero and endTime must be 2400.',
    )
    isOpen: Optional[bool] = Field(
        None,
        description='If false, then not available entire day, starTime and endTime must both be zero. If true, then available between startTime and endTime.',
    )
    startTime: Optional[int] = Field(
        None,
        description='startTime is entered in military format. e.g. 0 = midnight start, 900 = 9am start',
    )


class BusinessHourViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = None
    is24Hours: Optional[bool] = None
    isOpen: Optional[bool] = None
    startTime: Optional[int] = None


class BusinessHoursInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[BusinessHourInputModel] = None
    mon: Optional[BusinessHourInputModel] = None
    sat: Optional[BusinessHourInputModel] = None
    sun: Optional[BusinessHourInputModel] = None
    thu: Optional[BusinessHourInputModel] = None
    tue: Optional[BusinessHourInputModel] = None
    wed: Optional[BusinessHourInputModel] = None


class BusinessHoursUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[BusinessHourInputModel] = None
    mon: Optional[BusinessHourInputModel] = None
    sat: Optional[BusinessHourInputModel] = None
    sun: Optional[BusinessHourInputModel] = None
    thu: Optional[BusinessHourInputModel] = None
    tue: Optional[BusinessHourInputModel] = None
    wed: Optional[BusinessHourInputModel] = None


class BusinessHoursViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[BusinessHourViewModel] = None
    mon: Optional[BusinessHourViewModel] = None
    sat: Optional[BusinessHourViewModel] = None
    sun: Optional[BusinessHourViewModel] = None
    thu: Optional[BusinessHourViewModel] = None
    tue: Optional[BusinessHourViewModel] = None
    wed: Optional[BusinessHourViewModel] = None


class BusinessPermissionViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    access: Optional[str] = None
    function: Optional[str] = None
    object: Optional[str] = None
    role: Optional[str] = None


class BusinessServiceViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[int] = None
    object: Optional[str] = None
    serviceId: Optional[int] = None
    serviceName: Optional[str] = None


class BusinessUserInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    email: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    resourceId: Optional[str] = None
    role: Optional[str] = None
    sendRegistrationInvite: Optional[bool] = None


class BusinessUserPermissionViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    access: Optional[str] = None
    function: Optional[str] = None
    object: Optional[str] = None


class BusinessUserUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    email: Optional[str] = None
    name: Optional[str] = None
    resourceId: Optional[str] = None
    role: Optional[str] = None
    sendRegistrationInvite: Optional[bool] = None


class BusinessUserViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    accountId: Optional[UUID] = None
    businessName: Optional[str] = None
    email: Optional[str] = None
    id: Optional[str] = None
    identityAccount: Optional[bool] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None
    permissions: Optional[List[BusinessUserPermissionViewModel]] = None
    resourceId: Optional[str] = None
    resourceName: Optional[str] = None
    role: Optional[str] = None


class CalendarAuthViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    calendarAuthUrl: Optional[str] = None
    calendarId: Optional[str] = None
    object: Optional[str] = None


class CalendarHourViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = None
    startTime: Optional[int] = None


class CalendarHoursViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[CalendarHourViewModel] = None
    mon: Optional[CalendarHourViewModel] = None
    sat: Optional[CalendarHourViewModel] = None
    sun: Optional[CalendarHourViewModel] = None
    thu: Optional[CalendarHourViewModel] = None
    tue: Optional[CalendarHourViewModel] = None
    wed: Optional[CalendarHourViewModel] = None


class CompanyDomainInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    domain: Optional[str] = None


class CompanyDomainUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    domain: Optional[str] = None


class CompanyDomainViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    domain: Optional[str] = None
    id: Optional[str] = None
    object: Optional[str] = None


class CompanyInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    bookingWebhookUrl: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    customerWebhookUrl: Optional[str] = None
    disableEmailAndSmsNotifications: Optional[bool] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    name: Optional[str] = None
    notificationFromEmailAddress: Optional[str] = None
    notificationFromName: Optional[str] = None
    phone: Optional[str] = None
    postalCode: Optional[str] = None
    registrationEmail: Optional[str] = None
    reminderWebhookUrl: Optional[str] = None
    resourceWebhookUrl: Optional[str] = None
    state: Optional[str] = None
    timezoneName: Optional[str] = None
    webhookSignatureHash: Optional[str] = None
    website: Optional[str] = None


class CompanyUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    bookingWebhookUrl: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None
    customerWebhookUrl: Optional[str] = None
    disableEmailAndSmsNotifications: Optional[bool] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    name: Optional[str] = None
    notificationFromEmailAddress: Optional[str] = None
    notificationFromName: Optional[str] = None
    phone: Optional[str] = None
    postalCode: Optional[str] = None
    registrationEmail: Optional[str] = None
    reminderWebhookUrl: Optional[str] = None
    resourceWebhookUrl: Optional[str] = None
    state: Optional[str] = None
    timezoneName: Optional[str] = None
    webhookSignatureHash: Optional[str] = None
    website: Optional[str] = None


class CompanyViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    addressLine1: Optional[str] = None
    addressLine2: Optional[str] = None
    bookingWebhookUrl: Optional[str] = None
    city: Optional[str] = None
    clientId: Optional[str] = None
    clientSecret: Optional[str] = None
    country: Optional[str] = None
    customerWebhookUrl: Optional[str] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    disableEmailAndSmsNotifications: Optional[bool] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None
    notificationFromEmailAddress: Optional[str] = None
    notificationFromName: Optional[str] = None
    object: Optional[str] = None
    phone: Optional[str] = None
    postalCode: Optional[str] = None
    registrationDate: Optional[str] = None
    registrationEmail: Optional[str] = None
    reminderWebhookUrl: Optional[str] = None
    resourceWebhookUrl: Optional[str] = None
    state: Optional[str] = None
    timezoneId: Optional[str] = None
    timezoneName: Optional[str] = None
    webhookSignatureHash: Optional[str] = None
    website: Optional[str] = None


class ContactInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessPhone: Optional[str] = None
    businessPhoneExt: Optional[str] = None
    conferenceInfo: Optional[str] = None
    homePhone: Optional[str] = None
    mobilePhone: Optional[str] = None
    preferredPhoneType: Optional[str] = None
    skypeUsername: Optional[str] = None


class ContactUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessPhone: Optional[str] = None
    businessPhoneExt: Optional[str] = None
    conferenceInfo: Optional[str] = None
    homePhone: Optional[str] = None
    mobilePhone: Optional[str] = None
    preferredPhoneType: Optional[str] = None
    skypeUsername: Optional[str] = None


class ContactViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessPhone: Optional[str] = None
    businessPhoneExt: Optional[str] = None
    conferenceInfo: Optional[str] = None
    homePhone: Optional[str] = None
    mobilePhone: Optional[str] = None
    phoneType: Optional[str] = None
    skypeUsername: Optional[str] = None


class ContentResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content: Optional[str] = None
    contentType: Optional[str] = None
    statusCode: Optional[int] = None


class CustomFieldInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field1: Optional[str] = None
    field10: Optional[str] = None
    field2: Optional[str] = None
    field3: Optional[str] = None
    field4: Optional[str] = None
    field5: Optional[str] = None
    field6: Optional[str] = None
    field7: Optional[str] = None
    field8: Optional[str] = None
    field9: Optional[str] = None


class CustomFieldUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    field1: Optional[str] = None
    field10: Optional[str] = None
    field2: Optional[str] = None
    field3: Optional[str] = None
    field4: Optional[str] = None
    field5: Optional[str] = None
    field6: Optional[str] = None
    field7: Optional[str] = None
    field8: Optional[str] = None
    field9: Optional[str] = None


class CustomFieldViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None
    value: Optional[str] = None


class CustomerViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressViewModel] = None
    birthdate: Optional[str] = None
    businessName: Optional[str] = None
    companyName: Optional[str] = None
    contact: Optional[ContactViewModel] = None
    createdBy: Optional[str] = None
    createdOn: Optional[str] = None
    customFields: Optional[Dict[str, CustomFieldViewModel]] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    disabled: Optional[bool] = None
    email: Optional[str] = None
    emailInfo: Optional[bool] = None
    emailPromotion: Optional[bool] = None
    firstname: Optional[str] = None
    gender: Optional[str] = None
    groupId: Optional[str] = None
    id: Optional[str] = None
    inviteEmailSent: Optional[str] = None
    lastVisitDate: Optional[str] = None
    lastname: Optional[str] = None
    latitude: Optional[str] = None
    locationId: Optional[str] = None
    longitude: Optional[str] = None
    modifiedBy: Optional[str] = None
    modifiedOn: Optional[str] = None
    name: Optional[str] = None
    notificationType: Optional[str] = None
    object: Optional[str] = None
    registeredBy: Optional[str] = None
    registrationDate: Optional[str] = None
    resourceId: Optional[str] = None
    stripeCustomerId: Optional[str] = None
    subscriptionId: Optional[str] = None
    verificationDate: Optional[str] = None
    verifiedBy: Optional[str] = None
    welcomeEmailSent: Optional[str] = None


class EmailTemplateInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    templateContent: Optional[str] = None
    templateName: Optional[str] = None


class EmailTemplateViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    customized: Optional[bool] = None
    description: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None
    scope: Optional[str] = None


class GoogleServiceAccountCreds(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    auth_provider_x509_cert_url: Optional[str] = None
    auth_uri: Optional[str] = None
    client_email: Optional[str] = None
    client_id: Optional[str] = None
    client_x509_cert_url: Optional[str] = None
    private_key: Optional[str] = None
    private_key_id: Optional[str] = None
    project_id: Optional[str] = None
    token_uri: Optional[str] = None
    type: Optional[str] = None


class MasterEmailTemplateSettingsViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    centerEmailContent: Optional[bool] = None
    centerEmailContentPanel: Optional[bool] = None
    centerEmailFooter: Optional[bool] = None
    contentBackgroundColor: Optional[str] = None
    contentColor: Optional[str] = None
    contentLinkColor: Optional[str] = None
    emailBackgroundColor: Optional[str] = None
    emailColor: Optional[str] = None
    emailLinkColor: Optional[str] = None
    footerFontSize: Optional[str] = None
    footerLogoHeight: Optional[str] = None
    footerLogoPadding: Optional[str] = None
    footerPanelEmailContact: Optional[bool] = None
    footerPanelPhoneContact: Optional[bool] = None
    footerPanelWebsiteContact: Optional[bool] = None
    headerLogoHeight: Optional[str] = None
    headerLogoPadding: Optional[str] = None
    panelBackgroundColor: Optional[str] = None
    panelColor: Optional[str] = None
    panelLinkColor: Optional[str] = None
    privacyPolicyLink: Optional[str] = None
    showContentPanel: Optional[bool] = None
    showFooterLogo: Optional[bool] = None
    showFooterPanel: Optional[bool] = None
    showHeaderLogo: Optional[bool] = None
    showHeaderPanel: Optional[bool] = None
    version: Optional[str] = None


class MasterTemplateSettingsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    centerEmailContent: Optional[bool] = None
    centerEmailContentPanel: Optional[bool] = None
    centerEmailFooter: Optional[bool] = None
    contentBackgroundColor: Optional[str] = None
    contentColor: Optional[str] = None
    contentLinkColor: Optional[str] = None
    emailBackgroundColor: Optional[str] = None
    emailColor: Optional[str] = None
    emailLinkColor: Optional[str] = None
    footerFontSize: Optional[str] = None
    footerLogoHeight: Optional[str] = None
    footerLogoPadding: Optional[str] = None
    footerPanelEmailContact: Optional[bool] = None
    footerPanelPhoneContact: Optional[bool] = None
    footerPanelWebsiteContact: Optional[bool] = None
    headerLogoHeight: Optional[str] = None
    headerLogoPadding: Optional[str] = None
    panelBackgroundColor: Optional[str] = None
    panelColor: Optional[str] = None
    panelLinkColor: Optional[str] = None
    privacyPolicyLink: Optional[str] = None
    showContentPanel: Optional[bool] = None
    showFooterLogo: Optional[bool] = None
    showFooterPanel: Optional[bool] = None
    showHeaderLogo: Optional[bool] = None
    showHeaderPanel: Optional[bool] = None


class OnlineSettingsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None
    bookingTimerMins: Optional[int] = None
    customerBookingsPerDay: Optional[int] = None
    enableWorldTimezones: Optional[bool] = None


class OnlineSettingsUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None
    bookingTimerMins: Optional[int] = None
    customerBookingsPerDay: Optional[int] = None
    enableWorldTimezones: Optional[bool] = None


class OnlineSettingsViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availabilityForm: Optional[int] = None
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None
    bookWithAccount: Optional[bool] = None
    bookingConfirmationMessage: Optional[str] = None
    bookingMessage: Optional[str] = None
    bookingPolicy: Optional[str] = None
    bookingTimerMins: Optional[int] = None
    businessId: Optional[str] = None
    companyId: Optional[str] = None
    customerBookingsPerDay: Optional[int] = None
    customerVerification: Optional[bool] = None
    defaultService: Optional[bool] = None
    defaultToCustomerTimezone: Optional[bool] = None
    disableAuthorization: Optional[bool] = None
    enableWorldTimezones: Optional[bool] = None
    enabled: Optional[bool] = None
    familyMembersEnabled: Optional[bool] = None
    firstAvailable: Optional[bool] = None
    formFlow: Optional[int] = None
    hideBreadCrumbNav: Optional[bool] = None
    hideContinueBooking: Optional[bool] = None
    hideLocationNav: Optional[bool] = None
    hideNavBar: Optional[bool] = None
    hideServiceGroupsNav: Optional[bool] = None
    hideServicesNav: Optional[bool] = None
    id: Optional[int] = None
    lateCancelAction: Optional[int] = None
    lateCancelHours: Optional[int] = None
    lateRescheduleAction: Optional[int] = None
    lateRescheduleHours: Optional[int] = None
    liveMode: Optional[bool] = None
    locationId: Optional[str] = None
    object: Optional[str] = None
    resourceAnyLabel: Optional[str] = None
    resourceLabel: Optional[str] = None
    resourceSelection: Optional[bool] = None
    returnToAvailability: Optional[bool] = None
    returnToService: Optional[bool] = None
    serviceLabel: Optional[str] = None
    showBusinessLogo: Optional[bool] = None
    showOnSchedLogo: Optional[bool] = None
    showServiceGroups: Optional[bool] = None


class PhoneViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessPhone: Optional[str] = None
    businessPhoneExt: Optional[str] = None
    homePhone: Optional[str] = None
    mobilePhone: Optional[str] = None
    phoneType: Optional[str] = None


class RegionInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None


class RegionUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None


class RegionViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None


class RepeatInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    frequency: Optional[str] = None
    interval: Optional[int] = None
    monthDay: Optional[int] = None
    monthType: Optional[str] = None
    weekdays: Optional[str] = None


class RepeatUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    frequency: Optional[str] = None
    interval: Optional[int] = None
    monthDay: Optional[int] = None
    monthType: Optional[str] = None
    weekdays: Optional[str] = None


class RepeatViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    frequency: Optional[str] = None
    interval: Optional[int] = None
    monthDay: Optional[str] = None
    monthType: Optional[str] = None
    weekdays: Optional[str] = None


class ResourceAllocationInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ResourceAllocationUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ResourceAllocationViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessId: Optional[int] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    endDate: Optional[str] = None
    endTime: Optional[int] = None
    id: Optional[int] = None
    object: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatViewModel] = None
    repeats: Optional[bool] = None
    resourceId: Optional[int] = None
    startDate: Optional[str] = None
    startTime: Optional[int] = None


class ResourceBlockInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    allDay: Optional[bool] = None
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ResourceBlockUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    allDay: Optional[bool] = None
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ResourceBlockViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessId: Optional[int] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    endDate: Optional[str] = None
    endTime: Optional[int] = None
    id: Optional[int] = None
    object: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatViewModel] = None
    repeats: Optional[bool] = None
    resourceId: Optional[int] = None
    startDate: Optional[str] = None
    startTime: Optional[int] = None


class ResourceGroupInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    email: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None


class ResourceGroupUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    email: Optional[str] = None
    name: Optional[str] = None


class ResourceGroupViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookingNotification: Optional[int] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[datetime] = None
    description: Optional[str] = None
    email: Optional[str] = None
    id: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None


class ResourceHourViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = None
    startTime: Optional[int] = None


class ResourceHoursViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[ResourceHourViewModel] = None
    mon: Optional[ResourceHourViewModel] = None
    sat: Optional[ResourceHourViewModel] = None
    sun: Optional[ResourceHourViewModel] = None
    thu: Optional[ResourceHourViewModel] = None
    tue: Optional[ResourceHourViewModel] = None
    wed: Optional[ResourceHourViewModel] = None


class ResourceImageInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    imageFileData: Optional[str] = None
    imageFileName: Optional[str] = None


class ResourceOptionsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bioLink: Optional[str] = None
    bookingNotification: Optional[int] = None
    calendarAvailability: Optional[int] = Field(
        None,
        description='0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar',
    )
    displayColor: Optional[str] = None
    effectiveDate: Optional[datetime] = None
    gender: Optional[str] = None
    googleCalendarId: Optional[str] = None
    hourly: Optional[float] = None
    ignoreBusinessHours: Optional[bool] = None
    notificationType: Optional[int] = Field(
        None, description='0 = None, 1=Online Bookings 2=All Bookings.'
    )
    outlookCalendarId: Optional[str] = None
    sortKey: Optional[int] = None


class ResourceOptionsUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bioLink: Optional[str] = None
    bookingNotification: Optional[int] = None
    calendarAvailability: Optional[int] = Field(
        None,
        description='0 = OnSched Availability, 1 = Google Calendar, 2 = Outlook Calendar',
    )
    displayColor: Optional[str] = None
    effectiveDate: Optional[datetime] = None
    gender: Optional[str] = None
    googleCalendarId: Optional[str] = None
    hourly: Optional[float] = None
    ignoreBusinessHours: Optional[bool] = None
    notificationType: Optional[int] = Field(
        None, description='0 = None, 1=Online Bookings 2=All Bookings.'
    )
    outlookCalendarId: Optional[str] = None
    sortKey: Optional[int] = None


class ResourceServiceViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    object: Optional[str] = None
    serviceId: Optional[int] = None
    serviceName: Optional[str] = None


class ResourceViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressViewModel] = None
    availability: Optional[ResourceHoursViewModel] = None
    bioLink: Optional[str] = None
    bookingNotification: Optional[int] = None
    calendarAvailability: Optional[int] = None
    contact: Optional[ContactViewModel] = None
    customFields: Optional[CustomFieldInputModel] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[datetime] = None
    description: Optional[str] = None
    effectiveDate: Optional[datetime] = None
    email: Optional[str] = None
    gender: Optional[str] = None
    googleCalendarAuthUrl: Optional[str] = None
    googleCalendarAuthorized: Optional[bool] = None
    googleCalendarId: Optional[str] = None
    groupId: Optional[int] = None
    hourly: Optional[float] = None
    id: Optional[str] = None
    ignoreBusinessHours: Optional[bool] = None
    imageUrl: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    notificationType: Optional[int] = None
    object: Optional[str] = None
    options: Optional[ResourceOptionsInputModel] = None
    outlookCalendarAuthUrl: Optional[str] = None
    outlookCalendarAuthorized: Optional[bool] = None
    outlookCalendarId: Optional[str] = None
    phone: Optional[PhoneViewModel] = None
    recurringAvailability: Optional[bool] = None
    services: Optional[List[ResourceServiceViewModel]] = None
    skypeName: Optional[str] = None
    sortKey: Optional[int] = None
    timezoneIana: Optional[str] = None
    timezoneId: Optional[str] = None
    timezoneOffset: Optional[int] = None


class ScheduleViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[CalendarHoursViewModel] = None
    bookingsPerSlot: Optional[int] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[datetime] = None
    id: Optional[str] = None
    interval: Optional[int] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None
    primary: Optional[bool] = None
    resourceGroupId: Optional[str] = None
    type: Optional[str] = None


class ServiceAllocationInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookingLimit: Optional[int] = None
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    locationId: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    resourceId: Optional[str] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ServiceAllocationUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookingLimit: Optional[int] = None
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    locationId: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    resourceId: Optional[str] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ServiceAllocationViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookingCount: Optional[int] = None
    bookingLimit: Optional[int] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    endDate: Optional[str] = None
    endTime: Optional[int] = None
    id: Optional[str] = None
    locationId: Optional[str] = None
    object: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatViewModel] = None
    repeats: Optional[bool] = None
    resourceAddress: Optional[AddressViewModel] = None
    resourceDescription: Optional[str] = None
    resourceId: Optional[str] = None
    resourceImageUrl: Optional[str] = None
    resourceName: Optional[str] = None
    resourcePhone: Optional[PhoneViewModel] = None
    serviceDescription: Optional[str] = None
    serviceDuration: Optional[int] = None
    serviceId: Optional[str] = None
    serviceImageUrl: Optional[str] = None
    serviceName: Optional[str] = None
    startDate: Optional[str] = None
    startTime: Optional[int] = None
    timezoneName: Optional[str] = None
    timezoneOffset: Optional[int] = None


class ServiceAllocationsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    serviceAllocations: Optional[List[ServiceAllocationInputModel]] = None


class ServiceBlockInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    locationId: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ServiceBlockUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatUpdateModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class ServiceBlockViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    endDate: Optional[str] = None
    endTime: Optional[int] = None
    id: Optional[str] = None
    locationId: Optional[str] = None
    object: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatViewModel] = None
    repeats: Optional[bool] = None
    serviceId: Optional[str] = None
    startDate: Optional[str] = None
    startTime: Optional[int] = None


class ServiceCalendarInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    calendarId: Optional[str] = None
    locationId: Optional[str] = None
    serviceId: Optional[str] = None


class ServiceCalendarViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    calendarId: Optional[str] = None
    calendarName: Optional[str] = None
    id: Optional[str] = None
    locationId: Optional[str] = None
    serviceId: Optional[str] = None
    serviceName: Optional[str] = None


class ServiceFeesInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    cancellationFeeAmount: Optional[float] = None
    cancellationFeeTaxable: Optional[bool] = None
    feeAmount: Optional[float] = None
    feeTaxable: Optional[bool] = None
    nonRefundable: Optional[bool] = None


class ServiceFeesUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    cancellationFeeAmount: Optional[float] = None
    cancellationFeeTaxable: Optional[bool] = None
    feeAmount: Optional[float] = None
    feeTaxable: Optional[bool] = None
    nonRefundable: Optional[bool] = None


class ServiceGroupInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    type: Optional[int] = None


class ServiceGroupViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    companyId: Optional[str] = None
    description: Optional[str] = None
    id: Optional[str] = None
    imageUrl: Optional[str] = None
    isDeleted: Optional[bool] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    object: Optional[str] = None
    type: Optional[int] = None


class ServiceHourViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = None
    startTime: Optional[int] = None


class ServiceHoursViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[ServiceHourViewModel] = None
    mon: Optional[ServiceHourViewModel] = None
    sat: Optional[ServiceHourViewModel] = None
    sun: Optional[ServiceHourViewModel] = None
    thu: Optional[ServiceHourViewModel] = None
    tue: Optional[ServiceHourViewModel] = None
    wed: Optional[ServiceHourViewModel] = None


class ServiceImageInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    imageFileData: Optional[str] = None
    imageFileName: Optional[str] = None


class ServiceOptionsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    consumerPadding: Optional[bool] = None
    defaultService: Optional[bool] = None
    durationInterval: Optional[int] = None
    durationMax: Optional[int] = None
    durationMin: Optional[int] = None
    durationSelect: Optional[bool] = None
    padding: Optional[int] = None


class ServiceOptionsUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    consumerPadding: Optional[bool] = None
    defaultService: Optional[bool] = None
    durationInterval: Optional[int] = None
    durationMax: Optional[int] = None
    durationMin: Optional[int] = None
    durationSelect: Optional[bool] = None
    padding: Optional[int] = None


class ServiceSettingsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None


class ServiceSettingsUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None


class ServiceViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[ServiceHoursViewModel] = None
    bookAheadUnit: Optional[int] = None
    bookAheadValue: Optional[int] = None
    bookInAdvance: Optional[int] = None
    bookingInterval: Optional[int] = None
    bookingLimit: Optional[int] = None
    calendarId: Optional[str] = None
    calendarResourceGroupId: Optional[str] = None
    cancellationFeeAmount: Optional[float] = None
    cancellationFeeTaxable: Optional[bool] = None
    companyId: Optional[str] = None
    consumerPadding: Optional[bool] = None
    customFields: Optional[CustomFieldInputModel] = None
    dailyBookingLimitCount: Optional[int] = None
    dailyBookingLimitMinutes: Optional[int] = None
    defaultService: Optional[bool] = None
    description: Optional[str] = None
    duration: Optional[int] = None
    durationInterval: Optional[int] = None
    durationMax: Optional[int] = None
    durationMin: Optional[int] = None
    durationSelect: Optional[bool] = None
    feeAmount: Optional[float] = None
    feeTaxable: Optional[bool] = None
    id: Optional[str] = None
    imageUrl: Optional[str] = None
    locationId: Optional[str] = None
    maxBookingLimit: Optional[int] = None
    maxCapacity: Optional[int] = None
    maxGroupSize: Optional[int] = None
    maxResourceBookingLimit: Optional[int] = None
    mediaPageUrl: Optional[str] = None
    name: Optional[str] = None
    nonRefundable: Optional[bool] = None
    object: Optional[str] = None
    padding: Optional[int] = None
    roundRobin: Optional[int] = None
    serviceGroupId: Optional[int] = None
    serviceGroupName: Optional[str] = None
    showOnline: Optional[bool] = None
    type: Optional[str] = None


class SystemTimezoneViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    baseUtcOffset: Optional[int] = None
    daylightName: Optional[str] = None
    displayName: Optional[str] = None
    standardName: Optional[str] = None
    supportsDaylightSavingTime: Optional[bool] = None
    timezoneIana: Optional[str] = None
    timezoneId: Optional[str] = None


class TimezonesViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None
    region: Optional[str] = None
    timezoneIanna: Optional[str] = None
    tzOffset: Optional[int] = None


class TravelViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    distance: Optional[str] = None
    proximity: Optional[str] = None
    startAddress: Optional[str] = None
    startLat: Optional[str] = None
    startLon: Optional[str] = None
    units: Optional[str] = None


class WeekDayInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endTime: Optional[int] = None
    startTime: Optional[int] = None


class WeekDayViewModel2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    displayEndTime: Optional[str] = None
    displayStartTime: Optional[str] = None
    endTime: Optional[int] = None
    startTime: Optional[int] = None


class SetupV1LocationsIdServicesPostRequest(RootModel[List[str]]):
    root: List[str]


class SetupV1ResourcesBulkPostResponse(RootModel[List[ResourceViewModel]]):
    root: List[ResourceViewModel]


class SetupV1ResourcesBulkPutResponse(RootModel[List[ResourceViewModel]]):
    root: List[ResourceViewModel]


class SetupV1ResourcesIdServicesPostRequest(RootModel[List[str]]):
    root: List[str]


class SetupV1ResourcesIdServicesPutRequest(RootModel[List[str]]):
    root: List[str]


class SetupV1ServicesIdAllocationsBulkPostResponse(
    RootModel[List[ServiceAllocationViewModel]]
):
    root: List[ServiceAllocationViewModel]


class AppointmentViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    auditTrail: Optional[List[AppointmentAuditViewModel]] = None
    bookedBy: Optional[str] = None
    businessName: Optional[str] = None
    calendarId: Optional[str] = None
    confirmationNumber: Optional[str] = None
    confirmed: Optional[bool] = None
    createDate: Optional[str] = None
    customFields: Optional[Dict[str, CustomFieldViewModel]] = None
    customerId: Optional[str] = None
    customerMessage: Optional[str] = None
    customers: Optional[List[AppointmentCustomerViewModel]] = None
    date: Optional[str] = None
    dateInternational: Optional[str] = None
    downloadIcsUrl: Optional[str] = None
    duration: Optional[int] = None
    email: Optional[str] = None
    emailConfirmationSent: Optional[str] = None
    emailReminderSent: Optional[str] = None
    endDateTime: Optional[str] = None
    firstname: Optional[str] = None
    groupSize: Optional[int] = None
    id: Optional[str] = None
    ipAddress: Optional[str] = None
    lastModifiedBy: Optional[str] = None
    lastModifiedOn: Optional[str] = None
    lastname: Optional[str] = None
    latitude: Optional[str] = None
    location: Optional[str] = None
    locationId: Optional[str] = None
    longitude: Optional[str] = None
    name: Optional[str] = None
    notes: Optional[str] = None
    object: Optional[str] = None
    onlineBooking: Optional[bool] = None
    paymentStatus: Optional[int] = None
    phone: Optional[str] = None
    phoneExt: Optional[str] = None
    phoneType: Optional[str] = None
    rescheduledId: Optional[str] = None
    resourceEmail: Optional[str] = None
    resourceGroupId: Optional[str] = None
    resourceGroupName: Optional[str] = None
    resourceId: Optional[str] = None
    resourceImageUrl: Optional[str] = None
    resourceName: Optional[str] = None
    resources: Optional[List[AppointmentResourceViewModel]] = None
    serviceAllocationId: Optional[str] = None
    serviceId: Optional[str] = None
    serviceImageUrl: Optional[str] = None
    serviceName: Optional[str] = None
    smsConfirmationSent: Optional[str] = None
    smsReminderSent: Optional[str] = None
    startDateTime: Optional[str] = None
    status: Optional[str] = None
    stripeChargeId: Optional[str] = None
    stripeRefundId: Optional[str] = None
    time: Optional[int] = None
    timezone: Optional[int] = None
    timezoneIana: Optional[str] = None
    timezoneId: Optional[str] = None


class AuthorizedCompanyListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[AuthorizedCompanyViewModel]] = None
    email: Optional[str] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class AvailabilityInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[WeekDayInputModel] = None
    mon: Optional[WeekDayInputModel] = None
    sat: Optional[WeekDayInputModel] = None
    sun: Optional[WeekDayInputModel] = None
    thu: Optional[WeekDayInputModel] = None
    tue: Optional[WeekDayInputModel] = None
    wed: Optional[WeekDayInputModel] = None


class AvailabilityViewModel2(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    fri: Optional[WeekDayViewModel2] = None
    mon: Optional[WeekDayViewModel2] = None
    sat: Optional[WeekDayViewModel2] = None
    sun: Optional[WeekDayViewModel2] = None
    thu: Optional[WeekDayViewModel2] = None
    tue: Optional[WeekDayViewModel2] = None
    wed: Optional[WeekDayViewModel2] = None


class BusinessPermissionListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[BusinessPermissionViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class BusinessServiceListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[BusinessServiceViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class BusinessUserListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[BusinessUserViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class CalendarBlockInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class CalendarBlockUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    endDate: Optional[date_aliased] = None
    endTime: Optional[int] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatInputModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[date_aliased] = None
    startTime: Optional[int] = None


class CalendarBlockViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    calendarId: Optional[str] = None
    deletedStatus: Optional[bool] = None
    deletedTime: Optional[str] = None
    endDate: Optional[str] = None
    endTime: Optional[int] = None
    id: Optional[str] = None
    locationId: Optional[str] = None
    object: Optional[str] = None
    reason: Optional[str] = None
    repeat: Optional[RepeatViewModel] = None
    repeats: Optional[bool] = None
    startDate: Optional[str] = None
    startTime: Optional[int] = None


class CompanyDomainListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: Optional[List[CompanyDomainViewModel]] = None
    object: Optional[str] = None
    url: Optional[str] = None


class CustomerListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[CustomerViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class CustomerPrivacyViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appointments: Optional[List[AppointmentViewModel]] = None
    customer: Optional[CustomerViewModel] = None


class EmailTemplateListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    data: Optional[List[EmailTemplateViewModel]] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class LocationInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressInputModel] = None
    adminEmail: Optional[str] = Field(None, description='Field is required.')
    adminName: Optional[str] = Field(
        None, description='This field is no longer required and has been deprecated.'
    )
    appointmentReminders: Optional[AppointmentRemindersInputModel] = None
    businessHours: Optional[BusinessHoursInputModel] = None
    defaults: Optional[BusinessDefaultsInputModel] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    friendlyId: Optional[str] = Field(
        None,
        description="Use the friendlyId as an alternative to the assigned locationId\r\nChoose something easy and meaningful. Must be unique within your company.\r\nFriendlyId's are limited to maximum of 64 characters.",
    )
    name: Optional[str] = None
    phone: Optional[str] = Field(
        None,
        description='GroupSize Limits the number of people that can come\r\nalong on a single appointment',
    )
    regionId: Optional[str] = None
    settings: Optional[OnlineSettingsInputModel] = None
    timezoneName: Optional[str] = Field(
        None,
        description='Field is required. It is in Iana format. e.g. America/New_York. Use moment.js in your client for ease of timezone detection and selection',
    )
    website: Optional[str] = None


class LocationUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressUpdateModel] = None
    adminEmail: Optional[str] = None
    adminName: Optional[str] = None
    appointmentReminders: Optional[AppointmentRemindersInputModel] = None
    businessHours: Optional[BusinessHoursUpdateModel] = None
    defaults: Optional[BusinessDefaultsUpdateModel] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    friendlyId: Optional[str] = None
    name: Optional[str] = None
    phone: Optional[str] = None
    regionId: Optional[str] = None
    settings: Optional[OnlineSettingsUpdateModel] = None
    timezoneName: Optional[str] = None
    website: Optional[str] = None


class LocationViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressViewModel] = None
    adminEmail: Optional[str] = None
    adminName: Optional[str] = None
    appointmentReminders: Optional[AppointmentReminderViewModel] = None
    businessHolidays: Optional[List[BusinessHolidayViewModel]] = None
    businessHours: Optional[BusinessHoursViewModel] = None
    companyId: Optional[str] = None
    companyName: Optional[str] = None
    defaults: Optional[BusinessDefaultsViewModel] = None
    email: Optional[str] = None
    fax: Optional[str] = None
    friendlyId: Optional[str] = None
    id: Optional[str] = None
    imageUrl: Optional[str] = None
    latitude: Optional[float] = None
    logo: Optional[str] = None
    longitude: Optional[float] = None
    name: Optional[str] = None
    object: Optional[str] = None
    phone: Optional[str] = None
    primaryBusiness: Optional[bool] = None
    primaryCalendarId: Optional[str] = None
    regionId: Optional[str] = None
    services: Optional[List[BusinessServiceViewModel]] = None
    settings: Optional[OnlineSettingsViewModel] = None
    timezoneIana: Optional[str] = None
    timezoneId: Optional[str] = None
    timezoneOffset: Optional[int] = None
    travel: Optional[TravelViewModel] = None
    website: Optional[str] = None


class LocationsInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    locations: Optional[List[LocationInputModel]] = None


class RegionListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[RegionViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ResourceAllocationListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ResourceAllocationViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ResourceAvailabilityViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    businessId: Optional[int] = None
    ignoreBusinessHours: Optional[bool] = None
    resourceId: Optional[int] = None
    resourceName: Optional[str] = None
    resourceTzo: Optional[int] = None
    weekdays: Optional[AvailabilityViewModel2] = None


class ResourceBlockListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ResourceBlockViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ResourceBulkUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressUpdateModel] = None
    availability: Optional[AvailabilityInputModel] = None
    contact: Optional[ContactUpdateModel] = None
    customFields: Optional[CustomFieldUpdateModel] = None
    description: Optional[str] = None
    email: Optional[str] = None
    groupId: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None
    options: Optional[ResourceOptionsUpdateModel] = None
    recurringAvailability: Optional[bool] = None
    serviceIds: Optional[List[str]] = None
    timezoneId: Optional[str] = None


class ResourceGroupListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ResourceGroupViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ResourceInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressInputModel] = None
    availability: Optional[AvailabilityInputModel] = None
    contact: Optional[ContactInputModel] = None
    customFields: Optional[CustomFieldInputModel] = None
    description: Optional[str] = None
    email: Optional[str] = None
    groupId: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    options: Optional[ResourceOptionsInputModel] = None
    recurringAvailability: Optional[bool] = None
    serviceIds: Optional[List[str]] = None
    timezoneId: Optional[str] = None


class ResourceListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ResourceViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ResourceUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[AddressUpdateModel] = None
    availability: Optional[AvailabilityInputModel] = None
    contact: Optional[ContactUpdateModel] = None
    customFields: Optional[CustomFieldUpdateModel] = None
    description: Optional[str] = None
    email: Optional[str] = None
    groupId: Optional[str] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    options: Optional[ResourceOptionsUpdateModel] = None
    recurringAvailability: Optional[bool] = None
    serviceIds: Optional[List[str]] = None
    timezoneId: Optional[str] = None


class ResourcesInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    resources: Optional[List[ResourceInputModel]] = None


class ResourcesUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    resources: Optional[List[ResourceBulkUpdateModel]] = None


class ScheduleInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[AvailabilityInputModel] = None
    bookingsPerSlot: Optional[int] = None
    interval: Optional[int] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    resourceGroupId: Optional[str] = None
    type: Optional[str] = None


class ScheduleListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ScheduleViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ScheduleUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[AvailabilityInputModel] = None
    bookingsPerSlot: Optional[int] = None
    interval: Optional[int] = None
    locationId: Optional[str] = None
    name: Optional[str] = None
    resourceGroupId: Optional[str] = None
    type: Optional[str] = None


class ServiceAllocationListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ServiceAllocationViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ServiceAvailabilityViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    ignoreBusinessHours: Optional[bool] = None
    serviceId: Optional[int] = None
    serviceName: Optional[str] = None
    weekdays: Optional[AvailabilityViewModel2] = None


class ServiceBlockListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ServiceBlockViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ServiceGroupListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ServiceGroupViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ServiceInputModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[AvailabilityInputModel] = None
    bookingInterval: Optional[int] = None
    bookingLimit: Optional[int] = None
    customFields: Optional[CustomFieldInputModel] = None
    description: Optional[str] = None
    duration: Optional[int] = None
    fees: Optional[ServiceFeesInputModel] = None
    locationId: Optional[str] = None
    maxCapacity: Optional[int] = None
    maxGroupSize: Optional[int] = None
    mediaPageUrl: Optional[str] = None
    name: Optional[str] = None
    options: Optional[ServiceOptionsInputModel] = None
    public: Optional[bool] = None
    serviceGroupId: Optional[str] = None
    settings: Optional[ServiceSettingsInputModel] = None
    type: Optional[str] = None


class ServiceListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[ServiceViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class ServiceUpdateModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    availability: Optional[AvailabilityInputModel] = None
    bookingInterval: Optional[int] = None
    bookingLimit: Optional[int] = None
    customFields: Optional[CustomFieldUpdateModel] = None
    description: Optional[str] = None
    duration: Optional[int] = None
    fees: Optional[ServiceFeesUpdateModel] = None
    locationId: Optional[str] = None
    maxCapacity: Optional[int] = None
    maxGroupSize: Optional[int] = None
    mediaPageUrl: Optional[str] = None
    name: Optional[str] = None
    options: Optional[ServiceOptionsUpdateModel] = None
    public: Optional[bool] = None
    serviceGroupId: Optional[str] = None
    settings: Optional[ServiceSettingsUpdateModel] = None
    type: Optional[str] = None


class TimezoneViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    object: Optional[str] = None
    regions: Optional[List[str]] = None
    timezones: Optional[List[TimezonesViewModel]] = None


class SetupV1LocationsBulkPostResponse(RootModel[List[LocationViewModel]]):
    root: List[LocationViewModel]


class SetupV1ResourcesIdReassignAppointmentsResourceIdPutResponse(
    RootModel[List[AppointmentViewModel]]
):
    root: List[AppointmentViewModel]


class AppointmentListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[AppointmentViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class CalendarBlockListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[CalendarBlockViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None


class LocationListViewModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    count: Optional[int] = None
    data: Optional[List[LocationViewModel]] = None
    hasMore: Optional[bool] = None
    object: Optional[str] = None
    total: Optional[int] = None
    url: Optional[str] = None
